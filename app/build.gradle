plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 34
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "in.ecomexpress.sathi"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 194
        versionName '2.3.44'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'


        android.applicationVariants.configureEach { variant ->
            variant.outputs.configureEach { output ->
                project.ext { appName = 'SATHi' }
                def formattedDate = new Date().format('MMM-dd')
                def builtType = variant.buildType.name
                def versionName = variant.versionName
                def flavor = variant.flavorName
                outputFileName = "SATHi${flavor}-${builtType}-${versionName}-${formattedDate}.apk"
            }
        }
        ndk {
            abiFilters = ['armeabi-v7a', 'arm64-v8a']
        }
    }
    lintOptions{
        disable 'MissingTranslation'
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        release {
            storeFile file('keystores/EcomJks.jks')
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
        debug {
            storeFile file('keystores/EcomJks.jks')
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }
    buildTypes {
        debug {
            def localProperties = new Properties()
            localProperties.load(new FileInputStream(rootProject.file("local.properties")))
            String shield_id = localProperties.getProperty("Shield_ID")
            String shield_key = localProperties.getProperty("Shield_Key")
            buildConfigField("String", "SHIELD_ID", "\"$shield_id\"")
            buildConfigField("String", "SHIELD_KEY", "\"$shield_key\"")
            //v2staging
            // buildConfigField("String", "BASE_URL", "\"https://sathiv2-test.ecomexpress.in/services/last_mile/v1/\"")

            //v3 UAT_JIO stag
            // buildConfigField("String", "BASE_URL", "\"https://sathiv3uat.eexp.in/services/last_mile/v1/\"")

            //v3 UAT_JIO prod
            //buildConfigField("String", "BASE_URL", "\"https://sathi3.eexp.in/services/last_mile/v1/\"")

            //v3staging
            buildConfigField("String", "BASE_URL", "\"https://gateway-test.ecomexpress.in/services/last_mile/v1/\"")

            //v3Prod
            // buildConfigField("String", "BASE_URL", "\"https://sathi3.ecomexpress.in/services/last_mile/v1/\"")

            buildConfigField("String", "API_KEY", "\"dT+NLQIHqljOR1CuidQ62h0a0MVc14JPleTMeBs5usA=\"")
            buildConfigField("String", "DB_KEY", "\"ecom@1234\"")
            buildConfigField("String", "GIT_HASH", "\"609da5b\"")
            buildConfigField("String", "API_VER", "\"V2\"")
            buildConfigField("String", "ENCRYPTION_KEY", "\"ecom@1234\"")
            minifyEnabled false
            shrinkResources false
            debuggable true
            jniDebuggable true
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            def localProperties = new Properties()
            localProperties.load(new FileInputStream(rootProject.file("local.properties")))
            String shield_id = localProperties.getProperty("Shield_ID")
            String shield_key = localProperties.getProperty("Shield_Key")
            buildConfigField("String", "SHIELD_ID", "\"$shield_id\"")
            buildConfigField("String", "SHIELD_KEY", "\"$shield_key\"")
            //v3 UAT_JIO prod
            buildConfigField("String", "BASE_URL", "\"https://sathi3.eexp.in/services/last_mile/v1/\"")

            //v3Prod
            // buildConfigField("String", "BASE_URL", "\"https://sathi3.ecomexpress.in/services/last_mile/v1/\"")

            //v2Prod
            // buildConfigField("String", "BASE_URL", "\"https://sathi2.ecomexpress.in/services/last_mile/v1/\"")

            buildConfigField("String", "API_KEY", "\"dT+NLQIHqljOR1CuidQ62h0a0MVc14JPleTMeBs5usA=\"")
            buildConfigField("String", "DB_KEY", "\"ecom@1234\"")
            buildConfigField("String", "GIT_HASH", "\"609da5b\"")
            buildConfigField("String", "API_VER", "\"V2\"")
            buildConfigField("String", "ENCRYPTION_KEY", "\"ecom@1234\"")
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "DEBUG_MODE", "false"
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_11
        sourceCompatibility JavaVersion.VERSION_11
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    productFlavors {
    }
    configurations {
        configureEach {
            exclude group: 'commons-logging', module: 'commons-logging'
            exclude group: 'org.apache.httpcomponents'
        }
    }
    sourceSets { main { java.srcDirs = ['src/main/java', 'src/test'] } }
    lint {
        abortOnError false
    }
    namespace 'in.ecomexpress.sathi'
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url "https://jitpack.io" }
    mavenCentral()
}
configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 10, 'minutes'
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    //noinspection GradleCompatible
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.5.1'
    compileOnly 'androidx.room:room-runtime:2.5.1'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.activity:activity:1.9.2'

    // ML Kit for Face detection
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'
    //notp
    implementation 'dnsjava:dnsjava:2.1.6'
    // RxJava Dependencies (React Android)
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'

    //Hilt Dependencies (Dependency Injection)

    implementation 'com.google.dagger:hilt-android:2.51.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.51.1' // For Kotlin
    annotationProcessor 'com.google.dagger:hilt-android-compiler:2.51.1'

    implementation 'com.google.dagger:hilt-android:2.51.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.3'
    implementation 'androidx.activity:activity:1.9.3'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.51.1'



    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.51.1'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-compiler:2.51.1'


    // Database Dependencies

    //TODO: SafeRoom is compilable with only Room v1.0.0

    implementation 'androidx.room:room-runtime:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1' // For Kotlin

    //noinspection GradleDependency
    //implementation 'androidx.room:room-rxjava2:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
    implementation 'cz.msebera.android:httpclient:4.3.6'
    implementation 'com.loopj.android:android-async-http:1.4.9'

    // Lifecycle Component Dependencies
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    //noinspection GradleCompatible for location
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    // Jackson Json
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.4'

    // Networking
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //ImageDonwload
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    //bar code scanner
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation 'com.google.zxing:core:3.3.3'
    implementation('com.journeyapps:zxing-android-embedded:4.3.0') { transitive = false }
    implementation "androidx.annotation:annotation:1.2.0"

    // External Dependency
    implementation project(path: ':encryptionmodule-release')
    implementation project(path: ':logistic-30Jan2020')
    implementation project(':MswipeWSDKVer1.0.12v3.4.2')
    implementation files('libs/geolocationfinder-debug.aar')
    implementation files('libs/verificatrixandroid-1.6.0.aar')
    implementation files('libs/appproductionrelease.aar')
    implementation files('libs/nsdl-esign-2.1-v-1.3.1.aar')
    implementation files('libs/nlscan_sdk_master.jar')
    implementation files('libs/app_libs_slf4j-api-1.7.12.jar')

    //Shield
    implementation('com.shield.android:shield-fraud:1.6.+')
            {
                exclude group: "org.slf4j", module: "slf4j-api"
            }
    implementation('androidx.preference:preference') {
        version {
            strictly '1.0.0'
        }
    }

    // For Esper Device SDK Integration:-
    implementation 'io.esper.devicesdk:app:+'

    //To check device is rooted or note
    implementation 'com.scottyab:rootbeer-lib:0.0.7'

    // Multidex
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.github.smart-fun:XmlToJson:1.4.5'
    implementation 'me.relex:circleindicator:2.1.6'
    implementation 'com.google.guava:guava:28.0-android'
    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


    implementation('com.google.maps:google-maps-services:0.1.20')
            {
                exclude group: 'org.slf4j'
            }


    implementation 'com.github.judemanutd:autostarter:1.0.8'
    implementation 'com.jakewharton:butterknife:10.0.0'

    implementation 'androidx.camera:camera-camera2:1.1.0-alpha07'
    implementation 'androidx.camera:camera-view:1.0.0-alpha27'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:33.3.0')

    // Declare the dependencies for the Crashlytics and Analytics librariess
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-crash:16.2.1'

    implementation 'com.google.mlkit:barcode-scanning:16.2.0'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    api 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    def camerax_version = "1.0.0-beta05"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:1.0.0-alpha12"
    implementation "androidx.camera:camera-extensions:1.0.0-alpha12"
    implementation 'com.tbuonomo:dotsindicator:4.2'
    implementation 'com.github.alirezaafkar:Android-Image-Cropper:2.3.3'
    api 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.2') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }
}
apply plugin: 'com.google.gms.google-services'  // Google Services plugin

// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'